#alternative port because we're intending to have this service communicate with other, concurrently running spring boot projects
server.port=8081
spring.mongodb.embedded.version=3.4.3
#to configure the actuator starter
management.endpoint.mappings.enabled=true
management.endpoints.web.exposure.include=health,info,mappings
#Kafka config settings
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=reservation-service-kafka-consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.demo.dtos.ReservationDTO
# custom
reservation.dto.consumer.topic=reservation_dto_topic